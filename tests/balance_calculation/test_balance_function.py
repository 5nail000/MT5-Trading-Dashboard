"""
–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ calculate_balance_at_date
"""

import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))))

from src.mt5.mt5_client import mt5_data_provider, mt5_calculator


def main_test():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ calculate_balance_at_date"""
    
    print("üßÆ –¢–ï–°–¢ –§–£–ù–ö–¶–ò–ò calculate_balance_at_date")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    from_date = datetime(2025, 9, 1)
    to_date = datetime(2025, 10, 15)
    
    print("üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...")
    deals, account_info = mt5_data_provider.get_history(
        from_date=from_date,
        to_date=to_date
    )
    
    if deals is None:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
        return
    
    print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å–¥–µ–ª–æ–∫: {len(deals)}")
    
    if account_info:
        print(f"üè¶ –ê–∫–∫–∞—É–Ω—Ç: {account_info.login}")
        print(f"üìà –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å MT5: {account_info.balance:.2f}")
    
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –¥–∞—Ç—ã
    test_dates = [
        ("10 –æ–∫—Ç—è–±—Ä—è", "2025-10-10"),
        ("–°—É–±–±–æ—Ç–∞", "2025-09-27"),
        ("–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ", "2025-09-28"),
    ]
    
    for day_name, date_str in test_dates:
        target_date = datetime.strptime(date_str, "%Y-%m-%d")
        
        print(f"üìÖ {day_name} ({date_str}):")
        
        # –ë–∞–ª–∞–Ω—Å –Ω–∞ –Ω–∞—á–∞–ª–æ –¥–Ω—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
        balance_beginning = mt5_calculator.calculate_balance_at_date(
            target_date=target_date,
            deals=deals
            # end_of_day –Ω–µ —É–∫–∞–∑–∞–Ω - –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é False (–Ω–∞—á–∞–ª–æ –¥–Ω—è)
        )
        
        # –ë–∞–ª–∞–Ω—Å –Ω–∞ –∫–æ–Ω–µ—Ü –¥–Ω—è
        balance_end = mt5_calculator.calculate_balance_at_date(
            target_date=target_date,
            deals=deals,
            end_of_day=True
        )
        
        print(f"   ‚Ä¢ üåÖ –ù–∞—á–∞–ª–æ –¥–Ω—è: {balance_beginning:.2f}")
        print(f"   ‚Ä¢ üåÜ –ö–æ–Ω–µ—Ü –¥–Ω—è:  {balance_end:.2f}")
        print(f"   ‚Ä¢ üìä –†–∞–∑–Ω–∏—Ü–∞:    {balance_end - balance_beginning:+.2f}")
        
        if account_info:
            print(f"   ‚Ä¢ üìà –û—Ç —Ç–µ–∫—É—â–µ–≥–æ: {account_info.balance - balance_end:+.2f}")
        
        print()
    
    print("=" * 50)
    print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
    
    print("\nüí° –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:")
    print("‚Ä¢ –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: calculate_balance_at_date(date, deals)")
    print("‚Ä¢ –ù–∞—á–∞–ª–æ –¥–Ω—è:   calculate_balance_at_date(date, deals, end_of_day=False)")
    print("‚Ä¢ –ö–æ–Ω–µ—Ü –¥–Ω—è:    calculate_balance_at_date(date, deals, end_of_day=True)")


if __name__ == "__main__":
    try:
        main_test()
    except KeyboardInterrupt:
        print("\nüëã –¢–µ—Å—Ç –ø—Ä–µ—Ä–≤–∞–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
