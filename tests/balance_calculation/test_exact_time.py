#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞—Å—á–µ—Ç–∞ –±–∞–ª–∞–Ω—Å–∞ –ø–æ –¥–∞—Ç–µ –∏ –≤—Ä–µ–º–µ–Ω–∏
"""
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))))

from datetime import datetime, time
from src.mt5.mt5_client import mt5_calculator, mt5_data_provider

def test_balance_calculation():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤ —Ä–∞—Å—á–µ—Ç–∞ –±–∞–ª–∞–Ω—Å–∞"""
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    deals, account_info = mt5_data_provider.get_history()
    if not deals:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
        return
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞ –±–∞–ª–∞–Ω—Å–∞ –ø–æ –¥–∞—Ç–µ –∏ –≤—Ä–µ–º–µ–Ω–∏")
    print("=" * 60)
    
    # –ü—Ä–∏–º–µ—Ä—ã –¥–∞—Ç
    test_date = datetime(2025, 10, 15)  # 15 –æ–∫—Ç—è–±—Ä—è 2025
    
    # 1. –ë–∞–ª–∞–Ω—Å –Ω–∞ –Ω–∞—á–∞–ª–æ –¥–Ω—è (00:00:00)
    balance_start = mt5_calculator.calculate_balance_at_date(
        target_date=test_date,
        deals=deals,
        end_of_day=False,
        use_exact_time=False
    )
    print(f"üìÖ –ë–∞–ª–∞–Ω—Å –Ω–∞ –Ω–∞—á–∞–ª–æ –¥–Ω—è {test_date.date()}: {balance_start:.2f}")
    
    # 2. –ë–∞–ª–∞–Ω—Å –Ω–∞ –∫–æ–Ω–µ—Ü –¥–Ω—è (23:59:59)
    balance_end = mt5_calculator.calculate_balance_at_date(
        target_date=test_date,
        deals=deals,
        end_of_day=True,
        use_exact_time=False
    )
    print(f"üåô –ë–∞–ª–∞–Ω—Å –Ω–∞ –∫–æ–Ω–µ—Ü –¥–Ω—è {test_date.date()}: {balance_end:.2f}")
    
    # 3. –ë–∞–ª–∞–Ω—Å –Ω–∞ —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è (14:30:00)
    exact_time = datetime(2025, 10, 15, 14, 30, 0)
    balance_exact = mt5_calculator.calculate_balance_at_date(
        target_date=exact_time,
        deals=deals,
        use_exact_time=True
    )
    print(f"‚è∞ –ë–∞–ª–∞–Ω—Å –Ω–∞ {exact_time.strftime('%H:%M:%S')}: {balance_exact:.2f}")
    
    # 4. –ë–∞–ª–∞–Ω—Å –Ω–∞ –¥—Ä—É–≥–æ–µ —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è (18:45:30)
    exact_time2 = datetime(2025, 10, 15, 18, 45, 30)
    balance_exact2 = mt5_calculator.calculate_balance_at_date(
        target_date=exact_time2,
        deals=deals,
        use_exact_time=True
    )
    print(f"‚è∞ –ë–∞–ª–∞–Ω—Å –Ω–∞ {exact_time2.strftime('%H:%M:%S')}: {balance_exact2:.2f}")
    
    print("\nüéØ –†–∞–∑–Ω–∏—Ü–∞ –≤ –±–∞–ª–∞–Ω—Å–∞—Ö:")
    print(f"   –ù–∞—á–∞–ª–æ –¥–Ω—è ‚Üí –ö–æ–Ω–µ—Ü –¥–Ω—è: {balance_end - balance_start:.2f}")
    print(f"   14:30 ‚Üí 18:45: {balance_exact2 - balance_exact:.2f}")

def calculate_balance_at_specific_time():
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –≤—Ä–µ–º—è"""
    
    # –ü—Ä–∏–º–µ—Ä: –±–∞–ª–∞–Ω—Å –Ω–∞ 15 –æ–∫—Ç—è–±—Ä—è 2025 –≤ 16:20:15
    target_datetime = datetime(2025, 10, 15, 16, 20, 15)
    
    deals, account_info = mt5_data_provider.get_history()
    if not deals:
        return None
    
    balance = mt5_calculator.calculate_balance_at_date(
        target_date=target_datetime,
        deals=deals,
        use_exact_time=True
    )
    
    print(f"üí∞ –ë–∞–ª–∞–Ω—Å –Ω–∞ {target_datetime.strftime('%d.%m.%Y %H:%M:%S')}: {balance:.2f}")
    return balance

if __name__ == "__main__":
    test_balance_calculation()
    print("\n" + "="*60)
    calculate_balance_at_specific_time()
