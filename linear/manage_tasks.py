#!/usr/bin/env python3
"""
Linear Task Manager
–ë—ã—Å—Ç—Ä–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏ –≤ Linear
"""

import sys
import os
from dotenv import load_dotenv
from linear_integration import LinearIntegration

# Load environment variables
load_dotenv()

class TaskManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–¥–∞—á Linear"""
    
    def __init__(self):
        self.linear = LinearIntegration()
    
    def list_tasks(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏"""
        print("üìã –í—Å–µ –∑–∞–¥–∞—á–∏ –≤ Linear:")
        print("-" * 50)
        
        issues = self.linear.get_issues(limit=20)
        
        if not issues:
            print("‚ùå –ó–∞–¥–∞—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
        
        for issue in issues:
            status_emoji = {
                'Todo': 'üìù',
                'In Progress': 'üîÑ', 
                'Done': '‚úÖ',
                'Canceled': '‚ùå'
            }.get(issue['state']['name'], '‚ùì')
            
            print(f"{status_emoji} {issue['identifier']}: {issue['title']}")
            print(f"   –°—Ç–∞—Ç—É—Å: {issue['state']['name']}")
            print(f"   URL: {issue['url']}")
            print()
    
    def update_task_status(self, task_id, new_status):
        """–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏"""
        status_mapping = {
            'todo': 'Todo',
            'progress': 'In Progress', 
            'done': 'Done',
            'cancel': 'Canceled'
        }
        
        linear_status = status_mapping.get(new_status.lower())
        if not linear_status:
            print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {new_status}")
            print("–î–æ—Å—Ç—É–ø–Ω—ã–µ: todo, progress, done, cancel")
            return
        
        result = self.linear.update_issue(task_id, state={'name': linear_status})
        
        if result.get('data', {}).get('issueUpdate', {}).get('success'):
            print(f"‚úÖ –ó–∞–¥–∞—á–∞ {task_id} –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–∞ –≤ —Å—Ç–∞—Ç—É—Å: {linear_status}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ {task_id}")
            print(f"–û—Ç–≤–µ—Ç: {result}")
    
    def create_task(self, title, description=""):
        """–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É"""
        result = self.linear.create_issue(title, description)
        
        if result.get('data', {}).get('issueCreate', {}).get('success'):
            issue = result['data']['issueCreate']['issue']
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∑–∞–¥–∞—á–∞: {issue['identifier']}")
            print(f"üìù –ù–∞–∑–≤–∞–Ω–∏–µ: {issue['title']}")
            print(f"üîó URL: {issue['url']}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏")
            print(f"–û—Ç–≤–µ—Ç: {result}")
    
    def show_help(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"""
        print("""
üéØ Linear Task Manager - –°–ø—Ä–∞–≤–∫–∞

–ö–æ–º–∞–Ω–¥—ã:
  python manage_tasks.py list                    - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏
  python manage_tasks.py status MT5-5 done      - –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏
  python manage_tasks.py create "–ù–∞–∑–≤–∞–Ω–∏–µ"       - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
  python manage_tasks.py help                    - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–°—Ç–∞—Ç—É—Å—ã:
  todo      - –ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é
  progress  - –í —Ä–∞–±–æ—Ç–µ  
  done      - –í—ã–ø–æ–ª–Ω–µ–Ω–æ
  cancel    - –û—Ç–º–µ–Ω–µ–Ω–æ

–ü—Ä–∏–º–µ—Ä—ã:
  python manage_tasks.py status MT5-5 done
  python manage_tasks.py create "–î–æ–±–∞–≤–∏—Ç—å —ç–∫—Å–ø–æ—Ä—Ç –≤ Excel"
  python manage_tasks.py create "–ò—Å–ø—Ä–∞–≤–∏—Ç—å –±–∞–≥" "–û–ø–∏—Å–∞–Ω–∏–µ –±–∞–≥–∞"
        """)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) < 2:
        print("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤")
        print("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python manage_tasks.py help")
        return
    
    manager = TaskManager()
    command = sys.argv[1].lower()
    
    if command == "list":
        manager.list_tasks()
    
    elif command == "status":
        if len(sys.argv) < 4:
            print("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python manage_tasks.py status MT5-5 done")
            return
        task_id = sys.argv[2]
        new_status = sys.argv[3]
        manager.update_task_status(task_id, new_status)
    
    elif command == "create":
        if len(sys.argv) < 3:
            print("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python manage_tasks.py create \"–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏\"")
            return
        title = sys.argv[2]
        description = sys.argv[3] if len(sys.argv) > 3 else ""
        manager.create_task(title, description)
    
    elif command == "help":
        manager.show_help()
    
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
        print("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python manage_tasks.py help")

if __name__ == "__main__":
    main()
